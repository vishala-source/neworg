name: Deploy Changed Files to Salesforce

on:
  push:
    branches:
      - main        # Deploy to Sandbox
      - Production  # Deploy to Production
    paths:
      - 'force-app/main/default/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install Salesforce CLI
      - name: Install Salesforce CLI
        run: npm install --global @salesforce/cli

      # Step 4: Set Environment Variables and Write Key File
      - name: Set Environment Variables
        run: |
          echo "Branch: $GITHUB_REF_NAME"
          if [[ "$GITHUB_REF_NAME" == "main" ]]; then
            echo "Using SANDBOX credentials"
            echo "DEPLOY_CONSUMER_KEY=${{ secrets.SF_CONSUMER_KEY }}" >> $GITHUB_ENV
            echo "DEPLOY_USERNAME=${{ secrets.SF_USERNAME }}" >> $GITHUB_ENV
            echo "DEPLOY_LOGIN_URL=${{ vars.INSTANCE_URL }}" >> $GITHUB_ENV
            echo "${{ secrets.SF_PRIVATE_KEY }}" > server.key
          elif [[ "$GITHUB_REF_NAME" == "Production" ]]; then
            echo "Using PRODUCTION credentials"
            echo "DEPLOY_CONSUMER_KEY=${{ secrets.PROD_CLIENT_ID }}" >> $GITHUB_ENV
            echo "DEPLOY_USERNAME=${{ secrets.PROD_USERNAME }}" >> $GITHUB_ENV
            echo "DEPLOY_LOGIN_URL=${{ secrets.PROD_LOGIN_URL }}" >> $GITHUB_ENV
            echo "${{ secrets.PROD_JWT_KEY }}" > server.key
          fi

      # Step 5: Authenticate with Salesforce
      - name: Authenticate with Salesforce
        run: |
          sf org login jwt \
            --client-id $DEPLOY_CONSUMER_KEY \
            --jwt-key-file server.key \
            --username $DEPLOY_USERNAME \
            --instance-url $DEPLOY_LOGIN_URL \
            --set-default \
            --alias target-org

      # Step 6: Retrieve Metadata from Production (manual trigger only)
      - name: Retrieve Metadata from Production
        if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/Production'
        run: |
          mkdir -p retrieved
          sf project retrieve start \
            --target-org target-org \
            --manifest manifest/package.xml \
            --output-dir retrieved
          cp -r retrieved/* force-app/main/default/

      # âœ… Step 7: Identify changed metadata files only
      - name: Identify changed metadata files
        id: changed_files
        if: github.event_name == 'push'
        run: |
          git diff --name-only HEAD~1 | grep '^force-app/main/default/' > changed_files.txt || true
          cat changed_files.txt || echo "No Salesforce metadata changes found"

      # Step 8: Deploy changed files
      - name: Deploy changed files to Salesforce
        if: github.event_name == 'push' && success()
        run: |
          if [ -s changed_files.txt ]; then
            while IFS= read -r file; do
              if [[ -f "$file" ]]; then
                echo "Deploying: $file"
                sf project deploy start --source-dir "$file" --target-org target-org
              fi
            done < changed_files.txt
          else
            echo "No changed files to deploy."
          fi

      # Step 9: Commit Retrieved Metadata
      - name: Commit Retrieved Metadata
        if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/Production'
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          git config --global user.name "vishala-source"
          git config --global user.email "vishalaharikantra098@gmail.com"
          git remote set-url origin https://vishala-source:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git add force-app/main/default
          git commit -m "ðŸ”„ Synced metadata from Production" || echo "Nothing to commit"
          git push origin HEAD:Production

      # Step 10: Logout
      - name: Logout from Salesforce
        run: |
          sf org logout --target-org target-org --no-prompt

      # Step 11: Deployment Success Message
      - name: Deployment Successful
        run: echo "âœ… Deployment to Salesforce completed successfully!"
